
;		CPL Head Toolpad Property Codes
;		Date: December 16,1990	
;		Version: 1


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
;	Property definitions
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

Headpadragged	DEFPROP					; Headpad was dragged
; should use Headpadopen, Headpadclosed props?

;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
; Headpad subroutines, generic to all headpads 
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

_Open_headpad	POP	A:R9				; get headpad
		CHLDRN	A:R9*,A:R8
		PUSH	A:R8				; put bar on stack for
;							; arrange rtn (below)
		ADDPROP	A:R8*,Prop:Visible		; show toolbar
		CHLDRN	A:R8*,A:R7
		ADDPROP	A:R7*,Prop:Visible		; show padhandles
		CHLDRN	A:R7*,A:R8
		ADDPROP	A:R8*,Prop:Visible		; show pads
		CRTN	Crtn:arrange_toolpads
		UPDATE	A:R9*,Const:UComputebboxflag/when:Now ; recompute group
		RTS

_Close_headpad	POP	A:R9				; get headpad
		CHLDRN	A:R9*,A:R8
		REMPROP	A:R8*,Prop:Visible		; hide toolbar
		CHLDRN	A:R8*,A:R7
		REMPROP	A:R7*,Prop:Visible		; hide padhandles
		CHLDRN	A:R7*,A:R8
		REMPROP	A:R8*,Prop:Visible		; hide toolpads
		RTS

;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
; Main headpad code starts here
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

; A head tool pad must: show its constituent toolpads if picked and they are
; invisible, or hide them if picked and they are visible.
; If you drag it, it should do nothing.

Headpad		DEFPROP

Headpad		STARTPROP
		BWIPED	AA:XOP*,A:_End_headpad&		; Event still active?

; =-=-=-=-=-=-=-=-= Message processing starts here. =-=-=-=-=-=-=-=-==-=-=-=-=-

		OWNER	A:R1,Const:Motherobj		; Get headpad
;		 Do regular stuff if no messages
_Check_messages	BNOMSGS	A:R1,A:_Check_trans&

;		 Get topmost message
		UNQMSG	A:R2

;		 Message jump table starts here.
;		 Check for open headpad msg.
_Check_openmsg	BNEQUAL	A:R2,Msg:Openheadpad,A:_Check_closemsg&
		PUSH	A:R1
		JSR	A:_Open_headpad&
		JUMP	A:_End_headpad&

;		 Check for close headpad msg.
_Check_closemsg	BNEQUAL	A:R2,Msg:Closeheadpad,A:_Check_dunkmsg&
		PUSH	A:R1
		JSR	A:_Close_headpad&
		JUMP	A:_End_headpad&

;		 Check for dunking a toolpad msg
_Check_dunkmsg	BNEQUAL	A:R2,Msg:Dunkpad,A:_End_headpad&
		UNQMSG	A:R3
		CHLDRN	A:R1*,A:R4
		ADOPT	A:R4*,A:R3*,Const:TRUE		; adopt pad to toolbar
		PUSH	A:R4
		CRTN	Crtn:arrange_toolpads
		HASPROP	A:R4*,Prop:Visible,A:R5,Const:Self ; toolbar vis.?
		BTRUE	A:R5,A:_Dunkcheck_done&
		REMPROP	A:R3*,Prop:Visible
		DESCEND	A:R3*,A:R4
		REMPROP	A:R4*,Prop:Visible

_Dunkcheck_done	JUMP	A:_End_headpad&

; =-=-=-=-=-=-=-= Event handling code starts here =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

;		 Event is a TRANSLATE?
_Check_trans	BNEQUAL	AA:XOP*,Opcd:TRANS,A:_Check_pick&

;		Check to see if we are dragging stuff.

;		 TRANSlating picked?
_Trans_picked	BNEQUAL	AA:XAS,Prop:Picked,A:_End_headpad&
		OWNER	A:R1,Const:Motherobj		; Get headpad 
		HASPROP	A:R1*,Prop:Picked,A:R2,Const:Self ; Is pad picked?
		BFALSE	A:R2,A:_End_headpad&		; No: quit

;		if this headpad was not marked as dragged, mark it
		HASPROP	A:R1*,Prop:Headpadragged,A:R2,Const:Self
		BTRUE	A:R2,A:_Killtranspk&
		ADDPROP	A:R1*,Prop:Headpadragged
;		Make it a child of the crosshair so it follows xhair around	
		ADOPT	Env:Crosshair_part,A:R1*,Const:FALSE 

_Killtranspk	WIPE	A:XOP*				; kill the trans
		JUMP	A:_End_headpad&

;		Handle a pick

;		 Is event a pick?
_Check_pick	BNEQUAL	AA:XOP*,Opcd:PICK,A:_Check_release&
;		 Are you picking selectables?
		BNEQUAL	AA:XAS,Prop:Selectable,A:_End_headpad&

;		if you were holding a tool, that's ok, just let it stay active,
;		but trap the pick (which the tool presumably has already passed
;		up).

_Pick_headpad	OWNER	A:R1,Const:Motherobj		; Get headpad
		PICK	A:R1*				; pick pad
		WIPE	A:XOP*				; kill pick
		JUMP	A:_End_headpad&

;		Handle a release

;		 Is event a release?
_Check_release	BNEQUAL	AA:XOP*,Opcd:RELEAS,A:_End_headpad&
; 		 Releasing selectables?
		BNEQUAL	AA:XAS,Prop:Selectable,A:_End_headpad&

		OWNER	A:R1,Const:Motherobj		; Get headpad

		HASPROP	A:R1*,Prop:Selectable,A:R2,Const:Self ; pad selectable?
		BFALSE	A:R2,A:_End_headpad&

		HASPROP	A:R1*,Prop:Picked,A:R2,Const:Self ; if pad not picked,
		BFALSE	A:R2,A:_End_headpad&		; quit

_Unpick_headpad	UNPICK	A:R1*				; yes, unpick it

_Check_dragged	HASPROP	A:R1*,Prop:Headpadragged,A:R2,Const:Self ; pad dragged?
		BFALSE	A:R2,A:_Useheadpad&		; No, turn it on.

		REMPROP	A:R1*,Prop:Headpadragged	; unmark it as dragged
;		Make it child of cutplane again
		ADOPT	Env:Cutplane_part,A:R1*,Const:TRUE
		JUMP	A:_Clear_release&

_Useheadpad	CHLDRN	A:R1*,A:R2			; check if toolbar vis.
		HASPROP	A:R2*,Prop:Visible,A:R3,Const:Self
		BTRUE	A:R3,A:_Hidebar&
		PUSH	A:R1
		JSR	A:_Open_headpad&
		JUMP	A:_Clear_release&

_Hidebar	PUSH	A:R1
		JSR	A:_Close_headpad&

_Clear_release	WIPE	A:XOP*

_End_headpad	RTS

